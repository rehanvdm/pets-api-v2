var T=Object.defineProperty;var y=(P,e)=>T(P,"name",{value:e,configurable:!0});var S=(r=>(r.Json="application/json",r.FormData="multipart/form-data",r.UrlEncoded="application/x-www-form-urlencoded",r.Text="text/plain",r))(S||{}),m=class m{baseUrl="-";securityData=null;securityWorker;abortControllers=new Map;customFetch=(...e)=>fetch(...e);baseApiParams={credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"};constructor(e={}){Object.assign(this,e)}setSecurityData=e=>{this.securityData=e};encodeQueryParam(e,t){return`${encodeURIComponent(e)}=${encodeURIComponent(typeof t=="number"?t:`${t}`)}`}addQueryParam(e,t){return this.encodeQueryParam(t,e[t])}addArrayQueryParam(e,t){return e[t].map(r=>this.encodeQueryParam(t,r)).join("&")}toQueryString(e){let t=e||{};return Object.keys(t).filter(r=>typeof t[r]<"u").map(r=>Array.isArray(t[r])?this.addArrayQueryParam(t,r):this.addQueryParam(t,r)).join("&")}addQueryParams(e){let t=this.toQueryString(e);return t?`?${t}`:""}contentFormatters={"application/json":e=>e!==null&&(typeof e=="object"||typeof e=="string")?JSON.stringify(e):e,"text/plain":e=>e!==null&&typeof e!="string"?JSON.stringify(e):e,"multipart/form-data":e=>Object.keys(e||{}).reduce((t,s)=>{let r=e[s];return t.append(s,r instanceof Blob?r:typeof r=="object"&&r!==null?JSON.stringify(r):`${r}`),t},new FormData),"application/x-www-form-urlencoded":e=>this.toQueryString(e)};mergeRequestParams(e,t){return{...this.baseApiParams,...e,...t||{},headers:{...this.baseApiParams.headers||{},...e.headers||{},...t&&t.headers||{}}}}createAbortSignal=e=>{if(this.abortControllers.has(e)){let s=this.abortControllers.get(e);return s?s.signal:void 0}let t=new AbortController;return this.abortControllers.set(e,t),t.signal};abortRequest=e=>{let t=this.abortControllers.get(e);t&&(t.abort(),this.abortControllers.delete(e))};request=async({body:e,secure:t,path:s,type:r,query:d,format:f,baseUrl:R,cancelToken:n,...q})=>{let x=(typeof t=="boolean"?t:this.baseApiParams.secure)&&this.securityWorker&&await this.securityWorker(this.securityData)||{},o=this.mergeRequestParams(q,x),l=d&&this.toQueryString(d),C=this.contentFormatters[r||"application/json"],g=f||o.format;return this.customFetch(`${R||this.baseUrl||""}${s}${l?`?${l}`:""}`,{...o,headers:{...o.headers||{},...r&&r!=="multipart/form-data"?{"Content-Type":r}:{}},signal:(n?this.createAbortSignal(n):o.signal)||null,body:typeof e>"u"||e===null?null:C(e)}).then(async u=>{let a=u;a.data=null,a.error=null;let b=g?await u[g]().then(i=>(a.ok?a.data=i:a.error=i,a)).catch(i=>(a.error=i,a)):a;if(n&&this.abortControllers.delete(n),!u.ok)throw b;return b})}};y(m,"HttpClient");var p=m,c=class c extends p{pets={petCreate:(e,t={})=>this.request({path:"/pets",method:"POST",body:e,type:"application/json",format:"json",...t}),petGetAll:(e={})=>this.request({path:"/pets",method:"GET",format:"json",...e}),petGet:(e,t={})=>this.request({path:`/pets/${e}`,method:"GET",format:"json",...t})}};y(c,"Api");var h=c;export{h as Api,S as ContentType,p as HttpClient};
//# sourceMappingURL=index.js.map
